/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generate_card.forms;

import generate_card.classes.MConnection;
import generate_card.classes.User;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marvin
 */
public class Staff_UI extends java.awt.Frame {
    java.awt.Frame frame;
    /**
     * Creates new form Staff_UI
     */
    public Staff_UI(java.awt.Frame frame) {
        initComponents();
        ImageIcon logo = new javax.swing.ImageIcon(getClass().getResource("/generate_card/images_or_icon/projectIcon.jpg"));
        setIconImage(logo.getImage());
        this.frame = frame;
        this.setLocationRelativeTo(null);
        updateFrame();
    }
    
    private void updateFrame(){
        table.clearSelection();
        create.setVisible(true);
        edit.setVisible(false);
        fire.setVisible(false);
        clear();
        try{
            MConnection mc = new MConnection();
            Statement stmt = mc.getStmt();
            Connection conn = mc.getConn();
            ResultSet rs = null;
            String QUERY = "SELECT * FROM staff WHERE school_id = " + User.school_id;
            rs = stmt.executeQuery(QUERY);
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            int rowCount = model.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
              model.removeRow(i);
            }
            /// display all result at the table
            while(rs.next()){
                int SelectedId = rs.getInt("ID");
                String name = rs.getString("first_name") +" "+ rs.getString("middle_name") +" "+ rs.getString("last_name") +" "+ rs.getString("prefix");
                model.addRow(new Object[]{SelectedId, name});
            }
            rs.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void setColor(int a, int b, int c){
        sfname.setForeground(new Color(a,b,c));
        smname.setForeground(new Color(a,b,c));
        slname.setForeground(new Color(a,b,c));
        sprefix.setForeground(new Color(a,b,c));
        susername.setForeground(new Color(a,b,c));
        spassword.setForeground(new Color(a,b,c));
    }
    private void clear(){
        sfname.setText("First name");
        smname.setText("Middle name");
        slname.setText("Last name");
        sprefix.setText("Prefix e.g(Jr.)");
        susername.setText("Username");
        spassword.setText("Password");
        setColor(153,153,153);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        slname = new javax.swing.JTextField();
        sfname = new javax.swing.JTextField();
        smname = new javax.swing.JTextField();
        sprefix = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        spassword = new javax.swing.JTextField();
        susername = new javax.swing.JTextField();
        edit = new javax.swing.JButton();
        create = new javax.swing.JButton();
        fire = new javax.swing.JButton();
        deselect = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 255, 128));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)), "STAFF", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial Black", 1, 24))); // NOI18N

        table.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Staff's list", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel2.setBackground(new java.awt.Color(0, 255, 128));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "STAFF", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jPanel10.setBackground(new java.awt.Color(0, 255, 128));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Name"));

        slname.setForeground(new java.awt.Color(153, 153, 153));
        slname.setText("Last name");
        slname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                slnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                slnameFocusLost(evt);
            }
        });

        sfname.setForeground(new java.awt.Color(153, 153, 153));
        sfname.setText("First name");
        sfname.setToolTipText("");
        sfname.setName(""); // NOI18N
        sfname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sfnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sfnameFocusLost(evt);
            }
        });

        smname.setForeground(new java.awt.Color(153, 153, 153));
        smname.setText("Middle name");
        smname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                smnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                smnameFocusLost(evt);
            }
        });

        sprefix.setForeground(new java.awt.Color(153, 153, 153));
        sprefix.setText("Prefix e.g(Jr.)");
        sprefix.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sprefixFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sprefixFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sfname)
                    .addComponent(smname)
                    .addComponent(slname)
                    .addComponent(sprefix, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(sfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(smname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sprefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel15.setBackground(new java.awt.Color(0, 255, 128));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Account"));

        spassword.setForeground(new java.awt.Color(153, 153, 153));
        spassword.setText("Password");
        spassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pspasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pspasswordFocusLost(evt);
            }
        });

        susername.setForeground(new java.awt.Color(153, 153, 153));
        susername.setText("Username");
        susername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                psusernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                psusernameFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(susername, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(spassword))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(susername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        create.setText("CREATE");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        fire.setText("FIRE");
        fire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(create, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(create)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit)
                    .addComponent(fire))
                .addContainerGap())
        );

        deselect.setText("de-select");
        deselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deselectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deselect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deselect)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit this frame only to get back to the main frame
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        this.frame.setEnabled(true);
        this.setVisible(false);
    }//GEN-LAST:event_exitForm

    private void slnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_slnameFocusGained
        if(slname.getText().trim().equals("Last name"))
        slname.setText("");
        slname.setForeground(Color.BLACK);
    }//GEN-LAST:event_slnameFocusGained

    private void slnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_slnameFocusLost
        if(slname.getText().trim().equals("")){
            slname.setText("Last name");
            slname.setForeground(new Color(153,153,153));}
    }//GEN-LAST:event_slnameFocusLost

    private void sfnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sfnameFocusGained
        if(sfname.getText().trim().equals("First name"))
        sfname.setText("");
        sfname.setForeground(Color.BLACK);
    }//GEN-LAST:event_sfnameFocusGained

    private void sfnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sfnameFocusLost
        if(sfname.getText().trim().equals("")){
            sfname.setText("First name");
            sfname.setForeground(new Color(153,153,153));}
    }//GEN-LAST:event_sfnameFocusLost

    private void smnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_smnameFocusGained
        if(smname.getText().trim().equals("Middle name"))
        smname.setText("");
        smname.setForeground(Color.BLACK);
    }//GEN-LAST:event_smnameFocusGained

    private void smnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_smnameFocusLost
        if(smname.getText().trim().equals("")){
            smname.setText("Middle name");
            smname.setForeground(new Color(153,153,153));}
    }//GEN-LAST:event_smnameFocusLost

    private void sprefixFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sprefixFocusGained
        if(sprefix.getText().trim().equals("Prefix e.g(Jr.)"))
        sprefix.setText("");
        sprefix.setForeground(Color.BLACK);
    }//GEN-LAST:event_sprefixFocusGained

    private void sprefixFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sprefixFocusLost
        if(sprefix.getText().trim().equals("")){
            sprefix.setText("Prefix e.g(Jr.)");
            sprefix.setForeground(new Color(153,153,153));}
    }//GEN-LAST:event_sprefixFocusLost

    private void pspasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pspasswordFocusGained
        if(spassword.getText().trim().equals("Password"))
        spassword.setText("");
        spassword.setForeground(Color.BLACK);
    }//GEN-LAST:event_pspasswordFocusGained

    private void pspasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pspasswordFocusLost
        if(spassword.getText().trim().equals("")){
            spassword.setText("Password");
            spassword.setForeground(new Color(153,153,153));}
    }//GEN-LAST:event_pspasswordFocusLost

    private void psusernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_psusernameFocusGained
        if(susername.getText().trim().equals("Username"))
        susername.setText("");
        susername.setForeground(Color.BLACK);
    }//GEN-LAST:event_psusernameFocusGained

    private void psusernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_psusernameFocusLost
        if(susername.getText().trim().equals("")){
            susername.setText("Username");
            susername.setForeground(new Color(153,153,153));}
    }//GEN-LAST:event_psusernameFocusLost

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        create.setVisible(false);
        edit.setVisible(true);
        fire.setVisible(true);
        
        int id, row;
    
        row = table.getSelectedRow();
        id = (int) table.getModel().getValueAt(row, 0);
        try{
            MConnection mc = new MConnection();
            Statement stmt = mc.getStmt();
            Connection conn = mc.getConn();
            ResultSet rs = null;
            String QUERY = "SELECT * FROM staff WHERE id = " + id;
            rs = stmt.executeQuery(QUERY);
            if(rs.next()){
                sfname.setText(rs.getString("first_name"));
                smname.setText(rs.getString("middle_name"));
                slname.setText(rs.getString("last_name"));
                sprefix.setText(rs.getString("prefix"));
                susername.setText(rs.getString("username"));
                spassword.setText(rs.getString("password"));
                setColor(0, 0, 0);
            }
            rs.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        String[] options = new String[] {"Yes", "No"};
        int response = JOptionPane.showOptionDialog(null, "Are you sure?", "CERTAINTY",
            JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE,
            null, options, options[0]);
        if(response == 0){
            MConnection mc = new MConnection();
            String fname = sfname.getText();
            String mname = smname.getText();
            String lname = slname.getText();
            String prefix = sprefix.getText();
            String user = susername.getText();
            String pass = spassword.getText();
            if(! (fname.equals("") || mname.equals("") || lname.equals("") || user.equals("") || pass.equals("") || fname.equals("First name") || mname.equals("Middle name") || lname.equals("Last name") || user.equals("Username") || pass.equals("Password") || !mc.usernameIsValid(user))){
                if(prefix.equals("Prefix e.g(Jr.)"))
                    prefix = "";
                mc.insertOrEditStaff(fname, lname, lname, prefix, user, pass, "insert", User.school_id);
            }else JOptionPane.showMessageDialog(new JFrame(), "Error!!! Invalid input", "Dialog", JOptionPane.ERROR_MESSAGE);
            updateFrame();
        }
    }//GEN-LAST:event_createActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        String[] options = new String[] {"Yes", "No"};
        int response = JOptionPane.showOptionDialog(null, "Are you sure?", "CERTAINTY",
            JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE,
            null, options, options[0]);
        if(response == 0){
            MConnection mc = new MConnection();
            int row = table.getSelectedRow();
            int id = (int) table.getModel().getValueAt(row, 0);
            String fname = sfname.getText();
            String mname = smname.getText();
            String lname = slname.getText();
            String prefix = sprefix.getText();
            String user = susername.getText();
            String pass = spassword.getText();
            if(! (fname.equals("") || mname.equals("") || lname.equals("") || user.equals("") || pass.equals("") || fname.equals("First name") || mname.equals("Middle name") || lname.equals("Last name") || user.equals("Username") || pass.equals("Password") || !mc.usernameIsValid("staff", user, id))){
                if(prefix.equals("Prefix e.g(Jr.)"))
                    prefix = "";
                mc.insertOrEditStaff(fname, lname, lname, prefix, user, pass, "edit", id);
            }else JOptionPane.showMessageDialog(new JFrame(), "Error!!! Invalid input", "Dialog", JOptionPane.ERROR_MESSAGE); 
            updateFrame();  
        }
    }//GEN-LAST:event_editActionPerformed

    private void fireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fireActionPerformed
        String[] options = new String[] {"Yes", "No"};
        int response = JOptionPane.showOptionDialog(null, "This cannot be undone!!!         The data to be deleted will be lost forever", "Are you sure?",
            JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE,
            null, options, options[0]);
        if(response == 0){
            try {
                int row = table.getSelectedRow();
                int id = (int) table.getModel().getValueAt(row, 0);
                MConnection mc = new MConnection();
                Connection conn = mc.getConn();
                String QUERY = "DELETE FROM staff where id = ?";
                PreparedStatement pst = conn.prepareStatement(QUERY);
                pst.setInt(1, id);
                pst.execute();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                Logger.getLogger(Staff_UI.class.getName()).log(Level.SEVERE, null, ex);
            }
            updateFrame();
        }
    }//GEN-LAST:event_fireActionPerformed

    private void deselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deselectActionPerformed
        updateFrame();
    }//GEN-LAST:event_deselectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton create;
    private javax.swing.JButton deselect;
    private javax.swing.JButton edit;
    private javax.swing.JButton fire;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField sfname;
    private javax.swing.JTextField slname;
    private javax.swing.JTextField smname;
    private javax.swing.JTextField spassword;
    private javax.swing.JTextField sprefix;
    private javax.swing.JTextField susername;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
